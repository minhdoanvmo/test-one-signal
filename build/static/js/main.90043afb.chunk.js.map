{"version":3,"sources":["logo.svg","contexts/NotificationContext.tsx","containers/FacebookMessengerLink.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NotificationContext","createContext","undefined","NotificationProvider","children","useState","isLogging","setIsLogging","initialized","setInitialized","notifications","setNotifications","numberUnread","setNumberUnread","window","OneSignal","useEffect","localStorage","getItem","handleLogin","useCallback","setItem","push","init","appId","safari_web_id","allowLocalhostAsSecureOrigin","autoResubscribe","finally","showSlidedownPrompt","handleNotification","notification","data","__isOneSignalWelcomeNotification","console","log","prev","find","p","id","title","heading","detail","content","isRead","date","Date","registerDevice","userId","showNativePrompt","setSubscription","getUserId","on","isSubscribed","values","useMemo","Provider","value","FacebookMessengerLink","className","pageId","App","context","useContext","src","logo","alt","onClick","map","item","style","color","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90043afb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {\n  FC,\n  createContext,\n  useEffect,\n  useCallback,\n  useMemo,\n  useState,\n} from \"react\";\n\ninterface Notification {\n  id: string;\n  title: string;\n  detail: string;\n  date: string | Date;\n  isRead: boolean;\n}\n\ninterface NotificationContextValues {\n  initialized: boolean;\n  notifications: Array<Notification>;\n  numberUnread: number;\n  isLogging: boolean;\n  handleLogin: () => void;\n}\n\nexport const NotificationContext = createContext<\n  NotificationContextValues | undefined\n>(undefined);\n\nconst NotificationProvider: FC = ({ children }) => {\n  const [isLogging, setIsLogging] = useState<boolean>(false);\n  const [initialized, setInitialized] = useState<boolean>(false);\n  const [notifications, setNotifications] = useState<Array<Notification>>([]);\n  const [numberUnread, setNumberUnread] = useState<number>(0);\n\n  (window as any).OneSignal = (window as any).OneSignal || [];\n  const { OneSignal } = window as any;\n\n  useEffect(() => {\n    if (!!localStorage.getItem(\"TOKEN\")) {\n      setIsLogging(true);\n    }\n  }, []);\n\n  const handleLogin = useCallback(() => {\n    localStorage.setItem(\"TOKEN\", \"123456\");\n    setIsLogging(true);\n  }, []);\n\n  useEffect(() => {\n    if (!initialized) {\n      OneSignal.push(() => {\n        if (OneSignal.init) {\n          OneSignal.init({\n            appId: \"105fb738-a5db-4037-a6b7-07fcc7cbdfb8\",\n            safari_web_id:\n              \"web.onesignal.auto.3437296f-1581-4c9c-99a7-ef947df2b18c\",\n            allowLocalhostAsSecureOrigin: false,\n            autoResubscribe: true,\n          }).finally(() => {\n            setInitialized(true);\n          });\n\n          OneSignal.showSlidedownPrompt();\n        }\n      });\n      setInitialized(true);\n    }\n  }, [OneSignal, initialized]);\n\n  const handleNotification = useCallback(\n    (notification: {\n      id: string;\n      heading: string;\n      content: string;\n      icon: string;\n      data?: {\n        __isOneSignalWelcomeNotification: boolean;\n      };\n    }) => {\n      if (\n        notification &&\n        !notification?.data?.__isOneSignalWelcomeNotification\n      ) {\n        console.log(notification);\n        setNotifications((prev) => {\n          if (!prev.find((p) => p.id === notification.id)) {\n            return [\n              {\n                id: notification.id,\n                title: notification.heading,\n                detail: notification.content,\n                isRead: false,\n                date: new Date(),\n              },\n              ...prev,\n            ];\n          }\n          return prev;\n        });\n        setNumberUnread((prev) => prev + 1);\n      }\n    },\n    []\n  );\n\n  const registerDevice = useCallback((userId: string) => {\n    // eslint-disable-next-line no-console\n    console.log(\"userId: \", userId);\n  }, []);\n\n  useEffect(() => {\n    if (isLogging && initialized) {\n      OneSignal.push(() => {\n        OneSignal.showNativePrompt();\n\n        OneSignal.setSubscription(true);\n\n        OneSignal.getUserId(registerDevice);\n\n        OneSignal.on(\"subscriptionChange\", (isSubscribed: boolean) => {\n          if (isSubscribed) {\n            OneSignal.getUserId(registerDevice);\n          }\n        });\n\n        OneSignal.on(\"notificationDisplay\", handleNotification);\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isLogging, initialized, handleNotification, registerDevice]);\n\n  const values: NotificationContextValues = useMemo(() => {\n    return {\n      initialized,\n      notifications,\n      numberUnread,\n      isLogging,\n      handleLogin,\n    };\n  }, [initialized, notifications, numberUnread, isLogging, handleLogin]);\n\n  return (\n    <NotificationContext.Provider value={values}>\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n\nexport default NotificationProvider;\n","import React, { FC } from \"react\";\nimport ReactMessengerCustomerChat from \"react-messenger-customer-chat\";\n\nconst FacebookMessengerLink: FC = () => {\n  return (\n    <div className=\"Facebook-messenger\">\n      <ReactMessengerCustomerChat\n        pageId=\"771400903577002\"\n        appId=\"810978546253814\"\n      />\n    </div>\n  );\n};\n\nexport default FacebookMessengerLink;\n","import React, { FC, useContext } from \"react\";\n\nimport logo from \"./logo.svg\";\n\nimport { NotificationContext } from \"./contexts/NotificationContext\";\nimport FacebookMessengerLink from \"./containers/FacebookMessengerLink\";\n\nimport \"./App.css\";\n\nconst App: FC = () => {\n  const context = useContext(NotificationContext);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        {!context?.isLogging && (\n          <button onClick={context?.handleLogin}>Login</button>\n        )}\n        <div>\n          {context?.notifications?.map((item) => (\n            <p key={item.id} style={{ color: \"white\" }}>\n              {item.date.toString()} - {item.detail}\n            </p>\n          ))}\n        </div>\n      </header>\n      <FacebookMessengerLink />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport NotificationProvider from \"./contexts/NotificationContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <NotificationProvider>\n      <App />\n    </NotificationProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}